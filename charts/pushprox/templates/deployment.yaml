apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pushprox.fullname" . }}
  labels:
    {{- include "pushprox.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "pushprox.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pushprox.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pushprox.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if eq .Values.mode "client" }}
          command:
            - /app/pushprox-client
          {{- end }}
          args:
          {{- if eq .Values.mode "client" }}
            {{- with .Values.client.fqdn }}
            - --fqdn={{ . }}
            {{- end }}
            - --proxy-url={{ required "You must specify 'client.proxyURL' on client mode" .Values.client.proxyURL }}
            {{- with .Values.client.caCert }}
            - --tls.cacert={{ .Values.client.caCert }}
            {{- end }}
            {{- with .Values.client.cert }}
            - --tls.cert={{ .Values.client.cert }}
            {{- end }}
            {{- with .Values.client.key }}
            - --tls.key={{ .Values.client.key }}
            {{- end }}
            - --proxy.retry.initial-wait={{ .Values.client.retryInitialWait }}
            - --proxy.retry.max-wait={{ .Values.client.retryMaxWait }}
            - --log.level={{ .Values.client.logLevel }}
            - --log.format={{ .Values.client.logFormat }}
          {{- else if eq .Values.mode "proxy" }}
            - --registration.timeout={{ .Values.proxy.registrationTimeout }}
            - --scrape.max-timeout={{ .Values.proxy.maxTimeout }}
            - --scrape.default-timeout={{ .Values.proxy.defaultTimeout }}
            - --log.level={{ .Values.proxy.logLevel }}
            - --log.format={{ .Values.proxy.logFormat }}
          {{- else }}
          {{ fail (printf "Invalid mode '%s'" .Values.mode) }}
          {{- end }}
          ports:
            - name: http
              {{- if eq .Values.mode "client" }}
              containerPort: 9369
              {{- else }}
              containerPort: 8080
              {{- end }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
